(defun Prev_Narrow_day () 
(<= (/ (- (SValue PIVOT_HIGH S_CURRENT P_D1)
 (SValue PIVOT_LOW S_CURRENT P_D1)
)
 Point)
 10)
)
(defun Breakout_Big_Candle_M15_Bull () 
(AND (> (abs (SValue BAR S_PREVIOUS P_M15)
)
 (* (SValue ATR_14 S_PREVIOUS P_M15)
 1.7)
)
 (> (SValue HIGH S_CURRENT P_M15)
 (SValue HIGH S_PREVIOUS P_M15)
)
)
)
(defun Breakout_Big_Candle_M15_Bear () 
(AND (> (abs (SValue BAR S_PREVIOUS P_M15)
)
 (* (SValue ATR_14 S_PREVIOUS P_M15)
 1.7)
)
 (< (SValue LOW S_CURRENT P_M15)
 (SValue LOW S_PREVIOUS P_M15)
)
)
)
(defun Trade_no () 
(AND (= T_BUYNBRTRADE 0)
 (= T_SELLNBRTRADE 0)
)
)
(defun velocity_up () 
(AND (AndS VELOCITY S_ABOVE P_M5)
 (AndS VELOCITY S_UP P_M5)
)
)
(defun velocity_down () 
(AND (AndS VELOCITY S_BELOW P_M5)
 (AndS VELOCITY S_DOWN P_M5)
)
)
(defun volume_up () 
(AND (AndS VOLUME S_BULL P_M5)
 (> (SValue VOLUME S_CURRENT P_M5)
 200)
)
)
(defun Momentum_is_bull () 
(OR (AndS WPR_14 S_OVERBOUGHT P_M1)
 (AndS RSI_2 S_OVERBOUGHT P_M1)
 (AndS STOCHA_S S_OVERBOUGHT P_M1)
 (AndS STOCHA_M S_OVERBOUGHT P_M1)
 (AndS VELOCITY S_OVERBOUGHT P_M1)
)
)
(defun Momentum_is_bear () 
(OR (AndS WPR_14 S_OVERSOLD P_M1)
 (AndS RSI_2 S_OVERSOLD P_M1)
 (AndS STOCHA_S S_OVERSOLD P_M1)
 (AndS STOCHA_M S_OVERSOLD P_M1)
 (AndS VELOCITY S_BEAR P_M1)
)
)
(defun volume_down () 
(AND (AndS VOLUME S_BEAR P_M5)
 (> (SValue VOLUME S_CURRENT P_M5)
 200)
)
)
(defun Trade_only_buy () 
(AND (> T_BUYNBRTRADE 0)
 (= T_SELLNBRTRADE 0)
)
)
(defun Trade_only_sell () 
(AND (> T_SELLNBRTRADE 0)
 (= T_BUYNBRTRADE 0)
)
)
(defun Trade_buy_profit_positif () 
(>= T_PROFITBUY 0)
)
(defun Trade_sell_profit_positif () 
(>= T_PROFITSELL 0)
)
(defun Trade_buy_and_sell () 
(AND (> T_BUYNBRTRADE 0)
 (> T_SELLNBRTRADE 0)
)
)
(defun RSI_20_HEIKEN_BULL () 
(AND (AndS HEIKEN_ASHI S_BULL P_W1)
 (AndS HEIKEN_ASHI S_BULL P_D1)
 (AndS RSI_20 S_ABOVE P_D1)
)
)
(defun RSI_20_HEIKEN_BEAR () 
(AND (AndS HEIKEN_ASHI S_BEAR P_W1)
 (AndS HEIKEN_ASHI S_BEAR P_D1)
 (AndS RSI_20 S_BELOW P_D1)
)
)
(defun CROSS_DOWN_CLOSE_PREVIOUS_BEAR () 
(AND (AndPS BAR S_BEAR P_H1)
 (AndTS CLOSE S_CROSS_DOWN P_H1)
)
)
(defun CROSS_UP_CLOSE_PREVIOUS_BULL () 
(AND (AndPS BAR S_BULL P_H1)
 (AndTS CLOSE S_CROSS_UP P_H1)
)
)
(defun Pivots_Alert () 
(OR (AndS PIVOT_POINT S_ALERT P_D1)
 (AndS PIVOT_HIGH S_ALERT P_D1)
 (AndS PIVOT_LOW S_ALERT P_D1)
)
)
(defun Pivots_Touch () 
(OR (AndS PIVOT_POINT S_TOUCHED P_D1)
 (AndS PIVOT_HIGH S_TOUCHED P_D1)
 (AndS PIVOT_LOW S_TOUCHED P_D1)
)
)
(defun Candle_Buy_Entry_H4 () 
(OR (AndTS BAR S_BULL_ENGULFING P_H4)
 (AND (AndPS BAR S_BULL P_H4)
 (AndTS CLOSE S_CROSS_UP P_H4)
)
 (AND (> (abs (SValue BAR S_CURRENT P_H4)
)
 (* (SValue ATR_14 S_CURRENT P_H4)
 1.3)
)
 (AndS BAR S_BULL P_H4)
 (AndS HIGH S_ABOVE P_H4)
)
)
)
(defun Candle_Sell_Entry_H4 () 
(OR (AndTS BAR S_BEAR_ENGULFING P_H4)
 (AND (AndPS BAR S_BEAR P_H4)
 (AndTS CLOSE S_CROSS_DOWN P_H4)
)
 (AND (> (abs (SValue BAR S_CURRENT P_H4)
)
 (* (SValue ATR_14 S_CURRENT P_H4)
 1.3)
)
 (AndS BAR S_BEAR P_H4)
 (AndS LOW S_BELOW P_H4)
)
)
)
(defun Candle_Buy_Exit_H4 () 
(AND (NOT (EXECUTE "Trade_no")
)
 (OR (AND (AndS BAR S_CHANGED P_H4)
 (AndPS LOW S_DOWN P_H4)
)
 (AndS LOW S_BELOW P_H4)
 (AND (> (/ (- (SValue HIGH S_CURRENT P_H4)
 (SValue CLOSE S_CURRENT P_H4)
)
 Point)
 10)
 (AndTS BAR S_BEAR P_H4)
)
)
)
)
(defun Candle_Sell_Exit_H4 () 
(AND (NOT (EXECUTE "Trade_no")
)
 (OR (AND (AndS BAR S_CHANGED P_H4)
 (AndPS HIGH S_UP P_H4)
)
 (AndS HIGH S_ABOVE P_H4)
 (AND (< (/ (- (SValue LOW S_CURRENT P_H4)
 (SValue CLOSE S_CURRENT P_H4)
)
 Point)
 -10)
 (AndTS BAR S_BULL P_H4)
)
)
)
)
(defun Candle_Buy_Entry_H1 () 
(OR (AndTS BAR S_BULL_ENGULFING P_H1)
 (AND (AndPS BAR S_BULL P_H1)
 (AndTS CLOSE S_CROSS_UP P_H1)
)
 (AND (> (abs (SValue BAR S_CURRENT P_H1)
)
 (* (SValue ATR_14 S_CURRENT P_H1)
 1.0)
)
 (AndS BAR S_BULL P_H1)
 (AndS HIGH S_ABOVE P_H1)
)
)
)
(defun Candle_Sell_Entry_H1 () 
(OR (AndTS BAR S_BEAR_ENGULFING P_H1)
 (AND (AndPS BAR S_BEAR P_H1)
 (AndTS CLOSE S_CROSS_DOWN P_H1)
)
 (AND (> (abs (SValue BAR S_CURRENT P_H1)
)
 (* (SValue ATR_14 S_CURRENT P_H1)
 1.0)
)
 (AndS BAR S_BEAR P_H1)
 (AndS LOW S_BELOW P_H1)
)
)
)
(defun Candle_Buy_Exit_H1 () 
(AND (NOT (EXECUTE "Trade_no")
)
 (OR (EXECUTE "Candle_Bear_Changed_H1")
 (AndS LOW S_BELOW P_H1)
)
)
)
(defun Candle_Sell_Exit_H1 () 
(AND (NOT (EXECUTE "Trade_no")
)
 (OR (EXECUTE "Candle_Bull_Changed_H1")
 (AndS HIGH S_ABOVE P_H1)
)
)
)
(defun Candle_Buy_Entry_M30 () 
(OR (AndTS BAR S_BULL_ENGULFING P_M30)
 (AND (AndPS BAR S_BULL P_M30)
 (AndTS CLOSE S_CROSS_UP P_M30)
)
 (AND (> (abs (SValue BAR S_CURRENT P_M30)
)
 (* (SValue ATR_14 S_CURRENT P_M30)
 1.3)
)
 (AndS BAR S_BULL P_M30)
 (AndS HIGH S_ABOVE P_M30)
)
)
)
(defun Candle_Sell_Entry_M30 () 
(OR (AndTS BAR S_BEAR_ENGULFING P_M30)
 (AND (AndPS BAR S_BEAR P_M30)
 (AndTS CLOSE S_CROSS_DOWN P_M30)
)
 (AND (> (abs (SValue BAR S_CURRENT P_M30)
)
 (* (SValue ATR_14 S_CURRENT P_M30)
 1.3)
)
 (AndS BAR S_BEAR P_M30)
 (AndS LOW S_BELOW P_M30)
)
)
)
(defun Candle_Buy_Exit_M30 () 
(AND (NOT (EXECUTE "Trade_no")
)
 (OR (AND (AndS BAR S_CHANGED P_M30)
 (AndPS LOW S_DOWN P_M30)
)
 (AndS LOW S_BELOW P_M30)
 (AND (> (/ (- (SValue HIGH S_CURRENT P_M30)
 (SValue CLOSE S_CURRENT P_M30)
)
 Point)
 10)
 (AndTS BAR S_BEAR P_M30)
)
)
)
)
(defun Candle_Sell_Exit_M30 () 
(AND (NOT (EXECUTE "Trade_no")
)
 (OR (AND (AndS BAR S_CHANGED P_M30)
 (AndPS HIGH S_UP P_M30)
)
 (AndS HIGH S_ABOVE P_M30)
 (AND (< (/ (- (SValue LOW S_CURRENT P_M30)
 (SValue CLOSE S_CURRENT P_M30)
)
 Point)
 -10)
 (AndTS BAR S_BULL P_M30)
)
)
)
)
(defun Trade_Buy_Candle () 
(AND (= T_LASTORDERTYPE 0)
 (> T_LASTORDEROPENPRICE (SValue OPEN S_CURRENT P_H4)
)
 (> T_LASTORDERCLOSEPROFIT 0)
)
)
(defun FractalUp_Approaching_H1 () 
(AND (> (SValue UPFRACTAL S_DISTANCE P_H1)
 (* -5 Point)
)
 (< (SValue UPFRACTAL S_DISTANCE P_H1)
 0)
)
)
(defun Candle_Buy_Entry_D1 () 
(OR (AndS BAR S_BULL_ENGULFING P_D1)
 (AND (AndPS BAR S_BULL P_D1)
 (OR (AndS CLOSE S_REVERSE_UP P_D1)
 (AND (NOT (AndS CLOSE S_REVERSE_DOWN P_D1)
)
 (AndS CLOSE S_CROSS_UP P_D1)
)
)
)
 (AND (> (abs (SValue BAR S_CURRENT P_D1)
)
 (* (SValue ATR_14 S_CURRENT P_D1)
 1.3)
)
 (AndS BAR S_BULL P_D1)
 (AndS HIGH S_ABOVE P_D1)
)
)
)
(defun Candle_Buy_Exit_D1 () 
(AND (NOT (EXECUTE "Trade_no")
)
 (OR (EXECUTE "Candle_Sell_Entry_D1")
 (AndS LOW S_BELOW P_D1)
 (AND (> (/ (- (SValue HIGH S_CURRENT P_D1)
 (SValue CLOSE S_CURRENT P_D1)
)
 Point)
 10)
 (AndTS BAR S_BEAR P_D1)
)
)
)
)
(defun Candle_Sell_Entry_D1 () 
(OR (AndS BAR S_BEAR_ENGULFING P_D1)
 (AND (AndPS BAR S_BEAR P_D1)
 (OR (AndS CLOSE S_REVERSE_DOWN P_D1)
 (AND (NOT (AndS CLOSE S_REVERSE_UP P_D1)
)
 (AndS CLOSE S_CROSS_DOWN P_D1)
)
)
)
 (AND (> (abs (SValue BAR S_CURRENT P_D1)
)
 (* (SValue ATR_14 S_CURRENT P_D1)
 1.3)
)
 (AndS BAR S_BEAR P_D1)
 (AndS LOW S_BELOW P_D1)
)
)
)
(defun Candle_Sell_Exit_D1 () 
(AND (NOT (EXECUTE "Trade_no")
)
 (OR (EXECUTE "Candle_Buy_Entry_D1")
 (AndS HIGH S_ABOVE P_D1)
 (AND (< (/ (- (SValue LOW S_CURRENT P_D1)
 (SValue CLOSE S_CURRENT P_D1)
)
 Point)
 -10)
 (AndTS BAR S_BULL P_D1)
)
)
)
)
(defun FractalDown_Approaching_H1 () 
(AND (< (SValue DOWNFRACTAL S_DISTANCE P_H1)
 (* 5 Point)
)
 (> (SValue DOWNFRACTAL S_DISTANCE P_H1)
 0)
)
)
(defun FractalUp_Approaching_H4 () 
(AND (> (SValue UPFRACTAL S_DISTANCE P_H4)
 (* -5 Point)
)
 (< (SValue UPFRACTAL S_DISTANCE P_H4)
 0)
)
)
(defun FractalDown_Approaching_H4 () 
(AND (< (SValue DOWNFRACTAL S_DISTANCE P_H4)
 (* 5 Point)
)
 (> (SValue DOWNFRACTAL S_DISTANCE P_H4)
 0)
)
)
(defun FractalDown_Approaching_D1 () 
(AND (< (SValue DOWNFRACTAL S_DISTANCE P_D1)
 (* 5 Point)
)
 (> (SValue DOWNFRACTAL S_DISTANCE P_D1)
 0)
)
)
(defun FractalUp_Approaching_D1 () 
(AND (> (SValue UPFRACTAL S_DISTANCE P_D1)
 (* -5 Point)
)
 (< (SValue UPFRACTAL S_DISTANCE P_D1)
 0)
)
)
(defun FractalUp_Approaching () 
(OR (EXECUTE "FractalUp_Approaching_H1")
 (EXECUTE "FractalUp_Approaching_H4")
 (EXECUTE "FractalUp_Approaching_D1")
)
)
(defun FractalDown_Approaching () 
(OR (EXECUTE "FractalDown_Approaching_H1")
 (EXECUTE "FractalDown_Approaching_H4")
 (EXECUTE "FractalDown_Approaching_D1")
)
)
(defun Gap_Down_D1 () 
(< (SValue OPEN S_CURRENT P_D1)
 (- (SValue CLOSE S_PREVIOUS P_D1)
 (* 5 Point)
)
)
)
(defun Gap_Up_D1 () 
(> (SValue OPEN S_CURRENT P_D1)
 (+ (SValue CLOSE S_PREVIOUS P_D1)
 (* 5 Point)
)
)
)
(defun Candle_Bull_Changed_H1 () 
(AND (< (/ (- (SValue LOW S_CURRENT P_H1)
 (SValue CLOSE S_CURRENT P_H1)
)
 Point)
 -5)
 (AndTS BAR S_BULL P_H1)
)
)
(defun Candle_Bear_Changed_H1 () 
(AND (> (/ (- (SValue HIGH S_CURRENT P_H1)
 (SValue CLOSE S_CURRENT P_H1)
)
 Point)
 5)
 (AndTS BAR S_BEAR P_H1)
)
)
(defun Pivot_Up_Approaching_D1 () 
(OR (AND (> (SValue PIVOT_HIGH S_DISTANCE P_D1)
 (* -5 Point)
)
 (< (SValue PIVOT_HIGH S_DISTANCE P_D1)
 0)
)
 (AND (> (SValue PIVOT_RESISTANCE S_DISTANCE P_D1)
 (* -5 Point)
)
 (< (SValue PIVOT_RESISTANCE S_DISTANCE P_D1)
 0)
)
)
)
(defun Pivot_Down_Approaching_D1 () 
(OR (AND (< (SValue PIVOT_LOW S_DISTANCE P_D1)
 (* 5 Point)
)
 (> (SValue PIVOT_LOW S_DISTANCE P_D1)
 0)
)
 (AND (< (SValue PIVOT_SUPPORT S_DISTANCE P_D1)
 (* 5 Point)
)
 (> (SValue PIVOT_SUPPORT S_DISTANCE P_D1)
 0)
)
)
)
(defun Trade_Buy_OnBar_H1 () 
(AND (> T_LASTORDEROPENTIME (STime BAR S_CURRENT P_H1)
)
 (= T_LASTORDERTYPE 0)
)
)
(defun Trade_Sell_OnBar_H1 () 
(AND (> T_LASTORDEROPENTIME (STime BAR S_CURRENT P_H1)
)
 (= T_LASTORDERTYPE 1)
)
)
(defun Candle_Min_Size () 
(> (/ (abs (SValue BAR S_CURRENT P_H1)
)
 Point)
 5)
)
(defun ShouldExit () 
(> TimeCurrent 22:00:00)
)
(defun ShouldStart () 
(AND (< TimeCurrent 22:00:00)
 (> TimeCurrent 02:00:00)
)
)
(defun Fractal_Up_Zone () 
(OrS UPFRACTAL S_ALERT P_M30 P_H1 P_H4 P_D1)
)
(defun Fractal_Down_Zone () 
(OrS DOWNFRACTAL S_ALERT P_M30 P_H1 P_H4 P_D1)
)
(defun Pivot_Down_Zone () 
(OR (OrS PIVOT_LOW S_ALERT P_D1)
 (OrS PIVOT_SUPPORT S_ALERT P_D1)
 (OrS PIVOT_SUPPORT1 S_ALERT P_D1)
 (OrS PIVOT_SUPPORT2 S_ALERT P_D1)
)
)
(defun Pivot_Up_Zone () 
(OR (OrS PIVOT_HIGH S_ALERT P_D1)
 (OrS PIVOT_RESISTANCE S_ALERT P_D1)
 (OrS PIVOT_RESISTANCE1 S_ALERT P_M30 P_D1)
 (OrS PIVOT_RESISTANCE2 S_ALERT P_D1)
)
)
(defun Candle_Hammer_D1 () 
(OR (AndS BAR S_BULL_HAMMER1 P_D1 )
 (AndS BAR S_BULL_HAMMER2 P_D1)
)
)
(defun Candle_ShootingStar_D1 () 
(OR (AndS BAR S_BEAR_SHOOTING_STAR1 P_D1)
 (AndS BAR S_BEAR_SHOOTING_STAR2 P_D1 )
)
)
